Харківський університет радіоелектроніки
Факультет комп'ютерних наук
Кафедра програмної інженерії






ЗВІТ
з лабораторної роботи 3 з дисципліни
"Програмування під Android"
на тему "Розроблення калькулятора"








Виконав ст. гр ПЗПІ-23-8
Невмовенко Всеволод Олександрович
Перевірив
ст. викладач кафедри ПІ
Сокорчук Ігор Петрович








Харків 2024








МЕТА

Метою цієї лабораторної роботи є розробка калькулятора на чотири базові арифметичні операції (додавання, віднімання, множення, ділення) з використанням кнопок для введення аргументів та операцій. Калькулятор повинен мати адаптивний користувацький інтерфейс, який буде змінюватися в залежності від орієнтації екрана та його роздільної здатності.

ЗАВДАННЯ

Розробити інтерфейс для калькулятора з кнопками для вводу цифр і арифметичних операцій.
Реалізувати логіку виконання чотирьох базових арифметичних операцій.
Зробити інтерфейс адаптивним: у портретному режимі кнопки повинні бути розташовані у вигляді сітки, а в ландшафтному режимі — з боковим розміщенням.
Додати можливість очищення екрану та обчислення результату.



ХІД РОБОТИ

MainActivity.java:
У файлі MainActivity.java було реалізовано логіку калькулятора, яка включає:
Оголошення змінних для відображення результату та поточного введеного виразу.
Окремі методи для обробки натискання кнопок цифр та операторів, а також для очищення екрану.
Реалізацію методу для обчислення результату виразу.
activity_main.xml:
В XML-файлі було створено макет користувацького інтерфейсу:
Визначено TextView для відображення результату та введеного виразу.
Використано GridLayout для розміщення кнопок цифр та операцій.
Додано кнопку для очищення вводу та для обчислення результату.
Адаптивний інтерфейс:
Для забезпечення адаптивності інтерфейсу було використано ConstraintLayout, що дозволяє змінювати положення елементів залежно від орієнтації екрану.
У портретному режимі кнопки були розташовані в сітці, а в ландшафтному — у вигляді вертикальної колонки.
Обробка операцій:
У калькуляторі реалізовано чотири основні арифметичні операції: додавання, віднімання, множення та ділення.
Користувач може вводити числа та оператори, а також отримувати результат після натискання кнопки рівності.

ВИСНОВКИ

Посилання на відео в YouTube: https://youtu.be/RvWJ3DqCUW8

В результаті виконання завдання був успішно розроблений калькулятор з чотирма базовими арифметичними операціями, що має адаптивний інтерфейс. Зміна орієнтації екрана коректно змінює розташування кнопок, що забезпечує зручне використання калькулятора на різних пристроях. Користувач може вводити числа, вибирати операції та отримувати результат, а також очищати екран.































ДОДАТОК А
MainActivity.java 
package com.example.lab3;

import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

   private TextView resultText;
   private String currentInput = "";
   private boolean isNewInput = true;

   @Override
   protected void onCreate(Bundle savedInstanceState) {
       super.onCreate(savedInstanceState);
       setContentView(R.layout.activity_main);

       resultText = findViewById(R.id.resultText);

       // Кнопки цифр та операторів
       setupButtonClickListener(R.id.button0, "0");
       setupButtonClickListener(R.id.button1, "1");
       setupButtonClickListener(R.id.button2, "2");
       setupButtonClickListener(R.id.button3, "3");
       setupButtonClickListener(R.id.button4, "4");
       setupButtonClickListener(R.id.button5, "5");
       setupButtonClickListener(R.id.button6, "6");
       setupButtonClickListener(R.id.button7, "7");
       setupButtonClickListener(R.id.button8, "8");
       setupButtonClickListener(R.id.button9, "9");

       setupOperatorClickListener(R.id.buttonAdd, "+");
       setupOperatorClickListener(R.id.buttonSubtract, "-");
       setupOperatorClickListener(R.id.buttonMultiply, "*");
       setupOperatorClickListener(R.id.buttonDivide, "/");

       // Кнопка для очищення
       Button buttonClear = findViewById(R.id.buttonClear);
       buttonClear.setOnClickListener(v -> clear());

       // Кнопка для рівно
       Button buttonEquals = findViewById(R.id.buttonEquals);
       buttonEquals.setOnClickListener(v -> calculate());
   }

   private void setupButtonClickListener(int buttonId, String value) {
       Button button = findViewById(buttonId);
       button.setOnClickListener(v -> {
           if (isNewInput) {
               currentInput = value;
               isNewInput = false;
           } else {
               currentInput += value;
           }
           resultText.setText(currentInput);
       });
   }

   private void setupOperatorClickListener(int buttonId, String operatorValue) {
       Button button = findViewById(buttonId);
       button.setOnClickListener(v -> {
           if (!currentInput.isEmpty()) {
               currentInput += operatorValue;
               resultText.setText(currentInput);
               isNewInput = false;
           }
       });
   }

   private void calculate() {
       if (!currentInput.isEmpty()) {
           try {
               double result = evaluateExpression(currentInput);
               resultText.setText(String.valueOf(result));
               currentInput = String.valueOf(result);
               isNewInput = true;
           } catch (Exception e) {
               resultText.setText("Error");
           }
       }
   }

   private double evaluateExpression(String expression) {
       String[] tokens = expression.split("(?=[-+*/])|(?<=[-+*/])");
       double result = Double.parseDouble(tokens[0]);
       for (int i = 1; i < tokens.length; i += 2) {
           String operator = tokens[i];
           double num = Double.parseDouble(tokens[i + 1]);
           switch (operator) {
               case "+":
                   result += num;
                   break;
               case "-":
                   result -= num;
                   break;
               case "*":
                   result *= num;
                   break;
               case "/":
                   if (num != 0) {
                       result /= num;
                   } else {
                       throw new ArithmeticException("Divide by zero");
                   }
                   break;
           }
       }
       return result;
   }

   private void clear() {
       currentInput = "";
       resultText.setText("0");
       isNewInput = true;
   }
}











ДОДАТОК Б
activity_main.xml 

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
   xmlns:app="http://schemas.android.com/apk/res-auto"
   xmlns:tools="http://schemas.android.com/tools"
   android:layout_width="match_parent"
   android:layout_height="match_parent"
   tools:context=".MainActivity">

   <!-- TextView для відображення введених даних та результату -->
   <TextView
       android:id="@+id/resultText"
       android:layout_width="0dp"
       android:layout_height="wrap_content"
       android:text="0"
       android:textSize="36sp"
       android:gravity="end"
       android:padding="16dp"
       app:layout_constraintTop_toTopOf="parent"
       app:layout_constraintStart_toStartOf="parent"
       app:layout_constraintEnd_toEndOf="parent" />


   <GridLayout
       android:id="@+id/gridLayout"
       android:layout_width="0dp"
       android:layout_height="wrap_content"
       android:columnCount="4"
       android:orientation="horizontal"
       app:layout_constraintTop_toBottomOf="@+id/resultText"
       app:layout_constraintStart_toStartOf="parent"
       app:layout_constraintEnd_toEndOf="parent"
       android:padding="16dp">


       <Button
           android:id="@+id/button1"
           android:layout_width="0dp"
           android:layout_height="wrap_content"
           android:layout_columnWeight="1"
           android:text="1" />

       <Button
           android:id="@+id/button2"
           android:layout_width="0dp"
           android:layout_height="wrap_content"
           android:layout_columnWeight="1"
           android:text="2" />

       <Button
           android:id="@+id/button3"
           android:layout_width="0dp"
           android:layout_height="wrap_content"
           android:layout_columnWeight="1"
           android:text="3" />

       <Button
           android:id="@+id/buttonAdd"
           android:layout_width="0dp"
           android:layout_height="wrap_content"
           android:layout_columnWeight="1"
           android:text="+" />


       <Button
           android:id="@+id/button4"
           android:layout_width="0dp"
           android:layout_height="wrap_content"
           android:layout_columnWeight="1"
           android:text="4" />

       <Button
           android:id="@+id/button5"
           android:layout_width="0dp"
           android:layout_height="wrap_content"
           android:layout_columnWeight="1"
           android:text="5" />

       <Button
           android:id="@+id/button6"
           android:layout_width="0dp"
           android:layout_height="wrap_content"
           android:layout_columnWeight="1"
           android:text="6" />

       <Button
           android:id="@+id/buttonSubtract"
           android:layout_width="0dp"
           android:layout_height="wrap_content"
           android:layout_columnWeight="1"
           android:text="-" />

       <Button
           android:id="@+id/button7"
           android:layout_width="0dp"
           android:layout_height="wrap_content"
           android:layout_columnWeight="1"
           android:text="7" />

       <Button
           android:id="@+id/button8"
           android:layout_width="0dp"
           android:layout_height="wrap_content"
           android:layout_columnWeight="1"
           android:text="8" />

       <Button
           android:id="@+id/button9"
           android:layout_width="0dp"
           android:layout_height="wrap_content"
           android:layout_columnWeight="1"
           android:text="9" />

       <Button
           android:id="@+id/buttonMultiply"
           android:layout_width="0dp"
           android:layout_height="wrap_content"
           android:layout_columnWeight="1"
           android:text="*" />


       <Button
           android:id="@+id/button0"
           android:layout_width="0dp"
           android:layout_height="wrap_content"
           android:layout_columnSpan="2"
           android:layout_columnWeight="2"
           android:text="0" />

       <Button
           android:id="@+id/buttonClear"
           android:layout_width="0dp"
           android:layout_height="wrap_content"
           android:layout_columnWeight="1"
           android:text="C" />

       <Button
           android:id="@+id/buttonDivide"
           android:layout_width="0dp"
           android:layout_height="wrap_content"
           android:layout_columnWeight="1"
           android:text="/" />
   </GridLayout>


   <Button
       android:id="@+id/buttonEquals"
       android:layout_width="0dp"
       android:layout_height="wrap_content"
       android:layout_marginTop="16dp"
       android:layout_centerHorizontal="true"
       android:text="="
       app:layout_constraintTop_toBottomOf="@id/gridLayout"
       app:layout_constraintStart_toStartOf="parent"
       app:layout_constraintEnd_toEndOf="parent" />
</androidx.constraintlayout.widget.ConstraintLayout>

